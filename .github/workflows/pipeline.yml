name: Google Cloud Run Deploy
# https://github.com/google-github-actions/setup-gcloud
on:
  push:
    branches:
      - main
      - 'feature/**'

env:
  PROJECT_ID: hackathon-7aso-grupo-05-backend
  REGION: us-central1
  SERVICE_NAME: spotmusic-backend
  ARTIFACT_REPOSITORY_NAME: spotmusic
  ARTIFACT_REGISTRY_URL: 'us-central1-docker.pkg.dev/hackathon-7aso-grupo-05/teste'

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup GCloud Auth
        id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Docker Login
        run: | 
          echo '${{ secrets.GCP_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/

      - name: Build Image & Push
        run: | 
          docker build -t '${{ env.ARTIFACT_REGISTRY_URL }}'/'${{ env.ARTIFACT_REPOSITORY_NAME }}':latest .
          docker push '${{ env.ARTIFACT_REGISTRY_URL }}'/'${{ env.ARTIFACT_REPOSITORY_NAME }}':latest

  deploy-gcr:
    name: Deploy to GCR
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      - name: Setup GCloud Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Deploy GCloud Cloud Run
        id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          service: '${{ env.SERVICE_NAME }}'
          image: ${{ env.ARTIFACT_REGISTRY_URL }}/${{ env.ARTIFACT_REPOSITORY_NAME }}:latest
          flags: |
            --allow-unauthenticated
          env_vars: |
            CLOUD_SQL_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
            CLOUD_SQL_DATABASE_NAME=${{ secrets.CLOUD_SQL_DATABASE_NAME }}
            CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }}
            CLOUD_SQL_USERNAME=${{ secrets.CLOUD_SQL_USERNAME }}
            DB_LOCAL_HOST=${{ secrets.DB_LOCAL_HOST }}

      - name: 'Use output'
        run: 'curl "${{ steps.deploy.outputs.url }}"'